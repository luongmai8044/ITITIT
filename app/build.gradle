import com.android.builder.internal.BaseConfigImpl

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "mowede.framework.ititit"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions("version")
    productFlavors{
        dev{
            dimension "version"
            applicationIdSuffix ".dev"
            addConstant("BASE_URL", "http://www.mocky.io/v2/", it)
            addConstant("API_KEY", "ABCXYZ123TEST", it)
        }
        stage{
            dimension "version"
            applicationIdSuffix ".stage"
            addConstant("BASE_URL", "http://www.mocky.io/v2/", it)
            addConstant("API_KEY", "ABCXYZ123TEST", it)
        }
        live{
            dimension "version"
            applicationIdSuffix ".live"
            addConstant("BASE_URL", "http://www.mocky.io/v2/", it)
            addConstant("API_KEY", "ABCXYZ123TEST", it)
        }
    }

    defaultConfig {
        multiDexEnabled  true
    }
}

static def addConstant(constantName, constantValue, BaseConfigImpl configImpl) {
    configImpl.manifestPlaceholders += [(constantName): constantValue]
    configImpl.buildConfigField "String", "${constantName}", "\"${constantValue}\""
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"

    // android support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"

    // network
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"

    // database
    implementation "android.arch.persistence.room:rxjava2:$rootProject.roomDatabaseVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    kapt "android.arch.persistence.room:compiler:$rootProject.roomDatabaseVersion"


    // parser
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$rootProject.moshiVersion"

    // debug database
    debugImplementation "com.amitshekhar.android:debug-db:$rootProject.debugDBVersion"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // code generator for view
    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.httpLoggingInterceptor"

    // dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    kaptTest "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockitoKotlinVersion"

    // UI Testing
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // Android Kotlin Extension
    implementation "androidx.core:core-ktx:$rootProject.androidKTXVersion"

    // font
    implementation "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    // Lombok
    compileOnly "org.projectlombok:lombok:$rootProject.lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$rootProject.lombokVersion"
}
