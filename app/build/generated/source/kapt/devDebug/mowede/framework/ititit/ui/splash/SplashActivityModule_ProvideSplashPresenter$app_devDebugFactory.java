// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mowede.framework.ititit.ui.splash;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import mowede.framework.ititit.ui.splash.presenter.SplashMVPPresenter;
import mowede.framework.ititit.ui.splash.presenter.SplashPresenter;

public final class SplashActivityModule_ProvideSplashPresenter$app_devDebugFactory
    implements Factory<SplashMVPPresenter> {
  private final SplashActivityModule module;

  private final Provider<SplashPresenter> splashPresenterProvider;

  public SplashActivityModule_ProvideSplashPresenter$app_devDebugFactory(
      SplashActivityModule module, Provider<SplashPresenter> splashPresenterProvider) {
    assert module != null;
    this.module = module;
    assert splashPresenterProvider != null;
    this.splashPresenterProvider = splashPresenterProvider;
  }

  @Override
  public SplashMVPPresenter get() {
    return Preconditions.checkNotNull(
        module.provideSplashPresenter$app_devDebug(splashPresenterProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<SplashMVPPresenter> create(
      SplashActivityModule module, Provider<SplashPresenter> splashPresenterProvider) {
    return new SplashActivityModule_ProvideSplashPresenter$app_devDebugFactory(
        module, splashPresenterProvider);
  }
}
