// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mowede.framework.ititit.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import mowede.framework.ititit.ITITITApp;
import mowede.framework.ititit.datasource.remote.interceptor.AuthorizationInterceptor;

public final class AppModule_ProvideSessionExpiredListener$app_devDebugFactory
    implements Factory<AuthorizationInterceptor.SessionExpiredListener> {
  private final AppModule module;

  private final Provider<ITITITApp> applicationProvider;

  public AppModule_ProvideSessionExpiredListener$app_devDebugFactory(
      AppModule module, Provider<ITITITApp> applicationProvider) {
    assert module != null;
    this.module = module;
    assert applicationProvider != null;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public AuthorizationInterceptor.SessionExpiredListener get() {
    return Preconditions.checkNotNull(
        module.provideSessionExpiredListener$app_devDebug(applicationProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<AuthorizationInterceptor.SessionExpiredListener> create(
      AppModule module, Provider<ITITITApp> applicationProvider) {
    return new AppModule_ProvideSessionExpiredListener$app_devDebugFactory(
        module, applicationProvider);
  }
}
