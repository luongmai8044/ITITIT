// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mowede.framework.ititit.ui.base.view;

import dagger.MembersInjector;
import io.reactivex.Completable;
import io.reactivex.disposables.CompositeDisposable;
import javax.inject.Provider;

public final class BaseActivity_MembersInjector implements MembersInjector<BaseActivity> {
  private final Provider<Completable> sessionExpiredChannelProvider;

  private final Provider<CompositeDisposable> compositeDisposableProvider;

  public BaseActivity_MembersInjector(
      Provider<Completable> sessionExpiredChannelProvider,
      Provider<CompositeDisposable> compositeDisposableProvider) {
    assert sessionExpiredChannelProvider != null;
    this.sessionExpiredChannelProvider = sessionExpiredChannelProvider;
    assert compositeDisposableProvider != null;
    this.compositeDisposableProvider = compositeDisposableProvider;
  }

  public static MembersInjector<BaseActivity> create(
      Provider<Completable> sessionExpiredChannelProvider,
      Provider<CompositeDisposable> compositeDisposableProvider) {
    return new BaseActivity_MembersInjector(
        sessionExpiredChannelProvider, compositeDisposableProvider);
  }

  @Override
  public void injectMembers(BaseActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.sessionExpiredChannel = sessionExpiredChannelProvider.get();
    instance.compositeDisposable = compositeDisposableProvider.get();
  }
}
