// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mowede.framework.ititit.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.List;
import javax.inject.Provider;
import okhttp3.Interceptor;
import okhttp3.OkHttpClient;

public final class AppModule_ProvideHttpClient$app_devDebugFactory
    implements Factory<OkHttpClient> {
  private final AppModule module;

  private final Provider<List<Interceptor>> interceptorsProvider;

  public AppModule_ProvideHttpClient$app_devDebugFactory(
      AppModule module, Provider<List<Interceptor>> interceptorsProvider) {
    assert module != null;
    this.module = module;
    assert interceptorsProvider != null;
    this.interceptorsProvider = interceptorsProvider;
  }

  @Override
  public OkHttpClient get() {
    return Preconditions.checkNotNull(
        module.provideHttpClient$app_devDebug(interceptorsProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<OkHttpClient> create(
      AppModule module, Provider<List<Interceptor>> interceptorsProvider) {
    return new AppModule_ProvideHttpClient$app_devDebugFactory(module, interceptorsProvider);
  }
}
