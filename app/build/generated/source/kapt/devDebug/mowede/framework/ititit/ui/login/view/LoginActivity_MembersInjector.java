// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mowede.framework.ititit.ui.login.view;

import dagger.MembersInjector;
import io.reactivex.Completable;
import io.reactivex.disposables.CompositeDisposable;
import javax.inject.Provider;
import mowede.framework.ititit.ui.base.view.BaseActivity;
import mowede.framework.ititit.ui.login.presenter.LoginMVPPresenter;

public final class LoginActivity_MembersInjector implements MembersInjector<LoginActivity> {
  private final Provider<Completable> sessionExpiredChannelProvider;

  private final Provider<CompositeDisposable> compositeDisposableProvider;

  private final Provider<LoginMVPPresenter> presenterProvider;

  public LoginActivity_MembersInjector(
      Provider<Completable> sessionExpiredChannelProvider,
      Provider<CompositeDisposable> compositeDisposableProvider,
      Provider<LoginMVPPresenter> presenterProvider) {
    assert sessionExpiredChannelProvider != null;
    this.sessionExpiredChannelProvider = sessionExpiredChannelProvider;
    assert compositeDisposableProvider != null;
    this.compositeDisposableProvider = compositeDisposableProvider;
    assert presenterProvider != null;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<LoginActivity> create(
      Provider<Completable> sessionExpiredChannelProvider,
      Provider<CompositeDisposable> compositeDisposableProvider,
      Provider<LoginMVPPresenter> presenterProvider) {
    return new LoginActivity_MembersInjector(
        sessionExpiredChannelProvider, compositeDisposableProvider, presenterProvider);
  }

  @Override
  public void injectMembers(LoginActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    ((BaseActivity) instance).sessionExpiredChannel = sessionExpiredChannelProvider.get();
    ((BaseActivity) instance).compositeDisposable = compositeDisposableProvider.get();
    instance.presenter = presenterProvider.get();
  }
}
