// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mowede.framework.ititit.repository;

import dagger.internal.Factory;
import javax.inject.Provider;
import mowede.framework.ititit.datasource.local.LocalDataHelper;
import mowede.framework.ititit.datasource.preferences.PreferenceHelper;
import mowede.framework.ititit.datasource.remote.ApiServiceHelper;

public final class AppDataRepository_Factory implements Factory<AppDataRepository> {
  private final Provider<ApiServiceHelper> apiServiceHelperProvider;

  private final Provider<PreferenceHelper> preferenceHelperProvider;

  private final Provider<LocalDataHelper> localDataHelperProvider;

  public AppDataRepository_Factory(
      Provider<ApiServiceHelper> apiServiceHelperProvider,
      Provider<PreferenceHelper> preferenceHelperProvider,
      Provider<LocalDataHelper> localDataHelperProvider) {
    assert apiServiceHelperProvider != null;
    this.apiServiceHelperProvider = apiServiceHelperProvider;
    assert preferenceHelperProvider != null;
    this.preferenceHelperProvider = preferenceHelperProvider;
    assert localDataHelperProvider != null;
    this.localDataHelperProvider = localDataHelperProvider;
  }

  @Override
  public AppDataRepository get() {
    return new AppDataRepository(
        apiServiceHelperProvider.get(),
        preferenceHelperProvider.get(),
        localDataHelperProvider.get());
  }

  public static Factory<AppDataRepository> create(
      Provider<ApiServiceHelper> apiServiceHelperProvider,
      Provider<PreferenceHelper> preferenceHelperProvider,
      Provider<LocalDataHelper> localDataHelperProvider) {
    return new AppDataRepository_Factory(
        apiServiceHelperProvider, preferenceHelperProvider, localDataHelperProvider);
  }
}
