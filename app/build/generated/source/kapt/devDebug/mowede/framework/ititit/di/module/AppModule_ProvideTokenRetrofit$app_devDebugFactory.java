// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mowede.framework.ititit.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

public final class AppModule_ProvideTokenRetrofit$app_devDebugFactory implements Factory<Retrofit> {
  private final AppModule module;

  private final Provider<OkHttpClient> httpClientProvider;

  public AppModule_ProvideTokenRetrofit$app_devDebugFactory(
      AppModule module, Provider<OkHttpClient> httpClientProvider) {
    assert module != null;
    this.module = module;
    assert httpClientProvider != null;
    this.httpClientProvider = httpClientProvider;
  }

  @Override
  public Retrofit get() {
    return Preconditions.checkNotNull(
        module.provideTokenRetrofit$app_devDebug(httpClientProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Retrofit> create(
      AppModule module, Provider<OkHttpClient> httpClientProvider) {
    return new AppModule_ProvideTokenRetrofit$app_devDebugFactory(module, httpClientProvider);
  }
}
