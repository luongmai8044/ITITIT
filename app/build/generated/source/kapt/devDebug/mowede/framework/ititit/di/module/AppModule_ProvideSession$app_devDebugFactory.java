// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mowede.framework.ititit.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import mowede.framework.ititit.usecases.Session;
import mowede.framework.ititit.usecases.UserSession;

public final class AppModule_ProvideSession$app_devDebugFactory implements Factory<Session> {
  private final AppModule module;

  private final Provider<UserSession> userSessionProvider;

  public AppModule_ProvideSession$app_devDebugFactory(
      AppModule module, Provider<UserSession> userSessionProvider) {
    assert module != null;
    this.module = module;
    assert userSessionProvider != null;
    this.userSessionProvider = userSessionProvider;
  }

  @Override
  public Session get() {
    return Preconditions.checkNotNull(
        module.provideSession$app_devDebug(userSessionProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Session> create(
      AppModule module, Provider<UserSession> userSessionProvider) {
    return new AppModule_ProvideSession$app_devDebugFactory(module, userSessionProvider);
  }
}
