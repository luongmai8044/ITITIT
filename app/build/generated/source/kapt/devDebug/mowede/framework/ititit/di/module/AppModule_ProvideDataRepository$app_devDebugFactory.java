// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mowede.framework.ititit.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import mowede.framework.ititit.repository.AppDataRepository;
import mowede.framework.ititit.repository.DataRepository;

public final class AppModule_ProvideDataRepository$app_devDebugFactory
    implements Factory<DataRepository> {
  private final AppModule module;

  private final Provider<AppDataRepository> repositoryProvider;

  public AppModule_ProvideDataRepository$app_devDebugFactory(
      AppModule module, Provider<AppDataRepository> repositoryProvider) {
    assert module != null;
    this.module = module;
    assert repositoryProvider != null;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public DataRepository get() {
    return Preconditions.checkNotNull(
        module.provideDataRepository$app_devDebug(repositoryProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<DataRepository> create(
      AppModule module, Provider<AppDataRepository> repositoryProvider) {
    return new AppModule_ProvideDataRepository$app_devDebugFactory(module, repositoryProvider);
  }
}
